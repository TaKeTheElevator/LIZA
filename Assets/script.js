const word = "‚ô•LIZA‚ô•"; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
const heartSymbol = "‚ù§Ô∏è"; // –°–∏–º–≤–æ–ª —Å–µ—Ä–¥–µ—á–∫–∞
let index = 0;
let isWordVisible = true;

const circle = document.querySelector('.circle');
let brightness = 0.5; // –ù–∞—á–∞–ª—å–Ω–∞—è —è—Ä–∫–æ—Å—Ç—å –∫—Ä—É–≥–∞
const wordsContainer = document.querySelector('.words-container');
const words = document.querySelectorAll('.word-block');

function updateTitle() {
    const titleElement = document.getElementById("site-title");
    const length = word.length;

    let newTitle = "";
    for (let i = 0; i < length; i++) {
        if (isWordVisible && i < index) {
            newTitle += word[i];
        } else {
            newTitle += heartSymbol; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —Å–∏–º–≤–æ–ª —Å–µ—Ä–¥–µ—á–∫–∞
        }
    }

    titleElement.innerText = newTitle;

    if (isWordVisible) {
        if (index < length) {
            index++; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å, —á—Ç–æ–±—ã –∑–∞–º–µ–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â—É—é –±—É–∫–≤—É
        } else {
            isWordVisible = false; // –°–∫—Ä—ã–≤–∞–µ–º —Å–ª–æ–≤–æ
            index = length; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å –Ω–∞ –¥–ª–∏–Ω—É —Å–ª–æ–≤–∞ –¥–ª—è —Å—Ç–∏—Ä–∞–Ω–∏—è
        }
    } else {
        if (index > 0) {
            index--; // –£–º–µ–Ω—å—à–∞–µ–º –∏–Ω–¥–µ–∫—Å, —á—Ç–æ–±—ã —Å—Ç–µ—Ä–µ—Ç—å –±—É–∫–≤—É
        } else {
            isWordVisible = true; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–æ–≤–æ —Å–Ω–æ–≤–∞
            index = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ü–∏–∫–ª–∞
        }
    }
}

setInterval(updateTitle, 1000); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
// –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∫–ª–∞—Å—Å–æ–º .word-block
const wordBlocks = document.querySelectorAll('.word-block');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∫–æ–≥–¥–∞ –±–ª–æ–∫ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∏–ª–∏ –∏—Å—á–µ–∑–∞–µ—Ç –≤ –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
function checkVisibility() {
    wordBlocks.forEach(block => {
        const rect = block.getBoundingClientRect();
        const windowHeight = window.innerHeight;

        // –ï—Å–ª–∏ –≤–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å –±–ª–æ–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ–∫–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–∞ (–∏ –Ω–∏–∂–µ –µ–≥–æ –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã)
        if (rect.top <= windowHeight - 100 && rect.bottom >= 0) {
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è
            block.classList.add('visible');
        } else {
            // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞, –∫–æ–≥–¥–∞ –æ–Ω –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
            block.classList.remove('visible');
        }
    });
}

// –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—å –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
window.addEventListener('scroll', checkVisibility);

// –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —Å–µ—Ä–¥—Ü–∞ –∏ —Ç–µ–∫—Å—Ç–∞
document.addEventListener("scroll", function () {
    let heartSection = document.querySelector(".heart-section");
    let heart = document.querySelector(".heart");
    let loveText = document.querySelector(".love-text");
    let footerText = document.querySelector(".footer-text");

    let sectionPosition = heartSection.getBoundingClientRect().top;
    let screenPosition = window.innerHeight / 1.2;

    if (sectionPosition < screenPosition) {
        heartSection.classList.add("visible");
        heart.classList.add("visible");
        loveText.classList.add("visible");
        footerText.classList.add("visible");
        startTypingEffect();
    }
});

// –ü–µ—á–∞—Ç–∞—é—â–∏–π—Å—è —Ç–µ–∫—Å—Ç
const lovePhrases = [
    "–Ø –õ–Æ–ë–õ–Æ –¢–ï–ë–Ø ‚ô•Ô∏è",
    "I LOVE YOU ‚ô•Ô∏è",
    "JE T'AIME ‚ô•Ô∏è",
    "TE AMO ‚ô•Ô∏è",
    "ICH LIEBE DICH ‚ô•Ô∏è",
    "TI AMO ‚ô•Ô∏è",
    "ÊàëÁà±‰Ω† ‚ô•Ô∏è",
    "ÊÑõ„Åó„Å¶„Çã ‚ô•Ô∏è",
    "ÏÇ¨ÎûëÌï¥ ‚ô•Ô∏è",
    "EU TE AMO ‚ô•Ô∏è"
];

let loveText = document.querySelector(".love-text");
let phraseIndex = 0;
let charIndex = 0;
let isDeleting = false;

function startTypingEffect() {
    let currentPhrase = lovePhrases[phraseIndex];

    if (isDeleting) {
        loveText.textContent = currentPhrase.substring(0, charIndex - 1);
        charIndex--;
    } else {
        loveText.textContent = currentPhrase.substring(0, charIndex + 1);
        charIndex++;
    }

    if (!isDeleting && charIndex === currentPhrase.length) {
        setTimeout(() => (isDeleting = true), 2000);
    } else if (isDeleting && charIndex === 0) {
        isDeleting = false;
        phraseIndex = (phraseIndex + 1) % lovePhrases.length;
    }

    let speed = isDeleting ? 50 : 150;
    setTimeout(startTypingEffect, speed);
}







document.addEventListener("DOMContentLoaded", function () {
    const folderPath = "Assets/collage/"; // –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å —Ñ–æ—Ç–æ
    const gridWidth = 3; // 3 –≤ —à–∏—Ä–∏–Ω—É
    const gridHeight = 4; // 4 –≤ –≤—ã—Å–æ—Ç—É
    const gridSize = gridWidth * gridHeight; // 12 —Ñ–æ—Ç–æ –≤ —Å–µ—Ç–∫–µ
    const container = document.querySelector(".heart-background");

    let images = [
        "photo1.jpg", "photo2.jpg", "photo3.jpg", "photo4.jpg",
        "photo5.jpg", "photo6.jpg", "photo7.jpg", "photo8.jpg",
        "photo9.jpg", "photo10.jpg", "photo11.jpg", "photo12.jpg",
        "photo13.jpg", "photo14.jpg", "photo15.jpg", "photo16.jpg",
        "photo17.jpg", "photo18.jpg", "photo19.jpg", "photo20.jpg"
    ];

    images = images.map(img => folderPath + img);

    function shuffleArray(array) {
        for (let i = array.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [array[i], array[j]] = [array[j], array[i]];
        }
    }

    function isValidPlacement(grid, row, col, img) {
        const index = row * gridWidth + col;

        if (col > 0 && grid[index - 1] === img) return false; // –õ–µ–≤—ã–π —Å–æ—Å–µ–¥
        if (row > 0 && grid[index - gridWidth] === img) return false; // –í–µ—Ä—Ö–Ω–∏–π —Å–æ—Å–µ–¥
        return true;
    }

    function createGrid() {
        shuffleArray(images);
        let grid = new Array(gridSize).fill(null);
        let availableImages = [...images];

        container.innerHTML = '';

        for (let row = 0; row < gridHeight; row++) {
            for (let col = 0; col < gridWidth; col++) {
                let img = null;
                let attempts = 0;

                do {
                    img = availableImages[Math.floor(Math.random() * availableImages.length)];
                    attempts++;
                } while (!isValidPlacement(grid, row, col, img) && attempts < 10);

                grid[row * gridWidth + col] = img;
                availableImages = availableImages.filter(i => i !== img); // –£–±–∏—Ä–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–µ —Ñ–æ—Ç–æ

                const cell = document.createElement("div");
                cell.style.backgroundImage = `url('${img}')`;
                container.appendChild(cell);
            }
        }
    }

    function changeRandomImage() {
        shuffleArray(images);
        const cells = document.querySelectorAll(".heart-background div");
        let randomIndex;
        let newImage;
        let attempts = 0;

        do {
            randomIndex = Math.floor(Math.random() * cells.length);
            newImage = images[Math.floor(Math.random() * images.length)];
            attempts++;
        } while (
            [...cells].some(cell => cell.style.backgroundImage.includes(newImage)) && attempts < 10
        );

        cells[randomIndex].style.opacity = "0";

        setTimeout(() => {
            cells[randomIndex].style.backgroundImage = `url('${newImage}')`;
            cells[randomIndex].style.opacity = "1";
        }, 500);
    }

    createGrid();
    setInterval(changeRandomImage, 1000);
});



document.addEventListener("DOMContentLoaded", function () {
    const heartContainer = document.createElement("div");
    heartContainer.classList.add("floating-hearts-container");
    document.body.appendChild(heartContainer);

    function createHeart() {
        const heart = document.createElement("div");
        heart.classList.add("floating-heart");
        heart.innerHTML = "‚ù§Ô∏è"; // –ú–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ üíñ, üíò, üíû

        // –°–ª—É—á–∞–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
        heart.style.left = Math.random() * 100 + "vw";

        // –°–ª—É—á–∞–π–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Å–µ—Ä–¥–µ—á–∫–∞
        let size = Math.random() * 20 + 10; // 10px - 30px
        heart.style.fontSize = size + "px";

        // –°–ª—É—á–∞–π–Ω–∞—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏
        let duration = Math.random() * 3 + 2; // 2 - 5 —Å–µ–∫—É–Ω–¥
        heart.style.animationDuration = duration + "s";

        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        heartContainer.appendChild(heart);

        // –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            heart.remove();
        }, duration * 1000);
    }

    // –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–¥–µ—á–∫–∏ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
    setInterval(createHeart, 500);
});
document.addEventListener("DOMContentLoaded", () => {
    const musicBtn = document.getElementById("play-music");
    const bgMusic = document.getElementById("bg-music");

    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏
    function updateMusicButton() {
        if (!bgMusic.paused) {
            musicBtn.classList.add("playing");
        } else {
            musicBtn.classList.remove("playing");
        }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    updateMusicButton();

    // –ü—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–∫–ª—é—á–∞–µ–º/–≤—ã–∫–ª—é—á–∞–µ–º –º—É–∑—ã–∫—É
    musicBtn.addEventListener("click", () => {
        if (bgMusic.paused) {
            bgMusic.play();
        } else {
            bgMusic.pause();
        }
        updateMusicButton();
    });

    // –ï—Å–ª–∏ –º—É–∑—ã–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å/–æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∞—Å—å –±–µ–∑ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫)
    bgMusic.addEventListener("play", updateMusicButton);
    bgMusic.addEventListener("pause", updateMusicButton);
});

